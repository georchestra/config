# geonetwork datadir subdirs
geonetwork.dir=/mnt/geonetwork_datadir
geonetwork.config.dir=${geonetwork.dir}/config/
geonetwork.schema.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins/
geonetwork.lucene.dir=${geonetwork.dir}/index/
geonetwork.spatial.dir=${geonetwork.lucene.dir}
geonetwork.thesauri.dir=${geonetwork.config.dir}/codelist/
geonetwork.data.dir=${geonetwork.dir}/data/metadata_data/
geonetwork.svn.dir=${geonetwork.dir}/data/metadata_subversion/
geonetwork.resources.dir=${geonetwork.dir}/data/resources/
geonetwork.upload.dir=${geonetwork.dir}/data/upload/
geonetwork.formatter.dir=${geonetwork.dir}/data/formatter/
geonetwork.htmlcache.dir=${geonetwork.resources.dir}/htmlcache/

# database configuration
jdbc.host=database
jdbc.port=5432
jdbc.database=georchestra
jdbc.schema=geonetwork
jdbc.username=geonetwork
jdbc.password=georchestra

jdbc.basic.maxActive=33
jdbc.basic.maxWait=200
jdbc.basic.maxOpenPreparedStatements=1200

# ldap configuration (config-security/config-security-ldap.xml)
ldap.base.provider.url=ldap://ldap:389
ldap.base.dn=dc=georchestra,dc=org
ldap.security.principal=cn=admin,dc=georchestra,dc=org
ldap.security.credentials=secret
ldap.base.dn.pattern=uid={0}

ldap.sync.user.search.base=ou=users
ldap.sync.user.search.filter=(&(objectClass=*)(mail=*@*)(givenName=*))
ldap.sync.user.search.attribute=uid

ldap.privilege.create.nonexisting.groups=true
ldap.privilege.create.nonexisting.users=true

# Synchronise all orgs:
ldap.sync.group.search.base=ou=orgs
ldap.sync.group.search.filter=(objectClass=groupOfMembers)
ldap.sync.group.search.attribute=cn
ldap.sync.group.search.pattern=(.*)
ldap.sync.group.label.attribute=o

# LDAP synchronization job runs every minute
ldap.sync.cron=0 * * * * ?

ldap.privilege.import=true
ldap.base.search.base=ou=users
ldap.privilege.search.group.queryprop=member
ldap.privilege.search.group.query=(&(objectClass=groupOfMembers)(member=uid={0},${ldap.base.search.base},${ldap.base.dn}))
ldap.privilege.search.group.object=ou=orgs
# Org name serves as GN group identifier:
ldap.privilege.search.group.attribute=cn
# Synchronise Orgs (as GN groups) matching this pattern:
ldap.privilege.search.group.pattern=(.*)

ldap.privilege.search.privilege.pattern=GN_(.*)
ldap.privilege.search.privilege.query=(&(objectClass=groupOfMembers)(member=uid={0},${ldap.base.search.base},${ldap.base.dn}))
ldap.privilege.search.privilege.object=ou=roles
ldap.privilege.search.privilege.attribute=cn

# variables related to the georchestra-utils GN module

schematron.job.cronExpression=0 0 0/2 * * ?
schematron.job.activated=true



